/*
 * This is the Game class, it will be initialized 
 *
 * Game states:
 * Turn:
 *  Each player has a turn, so there is a pre-, and post-turn states
 * Round:
 *  A round is after every player has done their turn (unless otherwise specified), there are pre-, and post-round states.
 */
class YourGame extends CardGame {
  // Logic that runs on the start of the game
  fn pre_start(game: CardGame) -> CardGame {}

  // Logic that runs before every turn start
  fn turn_start(game: CardGame) -> CardGame {}

   // Logic that runs after every turn start
  fn turn_end(game: CardGame) -> CardGame {}

  // Logic that runs before every round start
  fn turn_start(game: CardGame) -> CardGame {}
  fn round_start(game: CardGame) -> CardGame {}

  // Logic that runs before every round end 
  fn round_end(game: CardGame) -> CardGame {}

  // Returns true if the game is over
  fn is_game_over(game: CardGame) -> bool {

  }
}

class YourCard extends Card {

}
