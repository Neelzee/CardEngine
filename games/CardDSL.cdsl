GAME {
turn_order = [right];
end_con = [any players isEmpty hand,any players isEqual score 10];
win_con = [greatest players score];
}

CARD {
draw_card 2 = [Hearts.Queen.0, Spades.Queen.0];

pass_next = [Hearts.King.0];

give_card = [Hearts.Two.0]

take_from_hand = [Clubs.Ace.0];

swap_hand = [Diamonds.Ace.0, Spades.Ace.0];

change_card = [Hearts.Ace.0];

card_compare = [gte];
ignore_constraints = [[Hearts.Ace.0]];
exception_constraints eq = [eq,rank];
card_constraints = [rank];
card_ranks = [Ace,Two,Three,Four,Five,Six,Seven,Eight,Nine,Ten,Jack,Queen,King];
card_values = [1,2,3,4,5,6,7,8,9,10,11,12,13];
card_suits = [Hearts,Diamonds,Clubs,Spades];
}

PLAYER {
player_moves = [PLAY_CARD FALSE,DRAW_CARD TRUE,DRAW_CARD TRUE,DRAW_CARD TRUE,PASS FALSE,DISCARD_CARD FALSE];
player_hand = [4];
}

ACTIONS {
turn_end = [always : reset player moves,prevPlayer isMove pPass : goBack turn, put pile player hand, goForward turn];
start_time = [always : shuffle deck,isEmpty pile : take 1 deck pile,always : reset player moves];
any_time = [isEmpty deck : swap pile deck, shuffle deck, take 1 deck pile,isEmpty pile : take 1 deck pile];
}